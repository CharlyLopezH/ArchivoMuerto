{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\n//import { clear } from \"console\";\n//import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Menu from \"./utils/Menu\"; //import PeliculaIndividual from \"./peliculas/PeliculaIndividual\";\n\nimport { Route, Switch } from \"react-router\"; //import IndiceGeneros from \"./generos/IndiceGeneros\";\n\nimport { BrowserRouter } from \"react-router-dom\"; //import LandingPage from \"./LandingPage\";\n\nimport rutas from \"./route-config\";\nimport configurarValidaciones from \"./utils/Validaciones\";\nimport AutenticacionContext from \"./auth/AutenticacionContext\";\nimport React, { useEffect, useState } from \"react\";\nimport { obtenerClaims } from \"./auth/manejadorJWT\";\nimport { configurarInterceptor } from \"./utils/interceptores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconfigurarValidaciones();\nconfigurarInterceptor();\n\nfunction App() {\n  _s();\n\n  const [claims, setClaims] = useState([]);\n  useEffect(() => {\n    setClaims(obtenerClaims());\n  }, []);\n\n  function actualizar(claims) {\n    setClaims(claims);\n  }\n\n  function esAdmin() {\n    return claims.findIndex(claim => claim.nombre === 'role' && claim.valor === 'admin') > -1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(AutenticacionContext.Provider, {\n        value: {\n          claims,\n          actualizar\n        },\n        children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: rutas.map(ruta => /*#__PURE__*/_jsxDEV(Route, {\n              path: ruta.path,\n              exact: ruta.exact,\n              children: ruta.esAdmin && !esAdmin() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"No Tiene Autorizaci\\xF3n para acceder a este componente\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(ruta.componente, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this)\n            }, ruta.path, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"17Kkweb1Cyb9Zk6k8cR+SmVFJAs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/App.tsx"],"names":["Menu","Route","Switch","BrowserRouter","rutas","configurarValidaciones","AutenticacionContext","React","useEffect","useState","obtenerClaims","configurarInterceptor","App","claims","setClaims","actualizar","esAdmin","findIndex","claim","nombre","valor","map","ruta","path","exact"],"mappings":";;;AAAA;AACA;AACA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,cAAjB,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B,C,CACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,sBAAP,MAAmC,sBAAnC;AACA,OAAOC,oBAAP,MAAiC,6BAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;;;AAGAN,sBAAsB;AACtBM,qBAAqB;;AAErB,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAU,EAAV,CAApC;AAEFD,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,SAAS,CAACJ,aAAa,EAAd,CAAT;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIE,WAASK,UAAT,CAAoBF,MAApB,EAAqC;AACnCC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD;;AAED,WAASG,OAAT,GAAmB;AACjB,WAAOH,MAAM,CAACI,SAAP,CAAiBC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,MAAjB,IAA2BD,KAAK,CAACE,KAAN,KAAgB,OAArE,IAAgF,CAAC,CAAxF;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,QAAA,KAAK,EAAE;AAAEP,UAAAA,MAAF;AAAUE,UAAAA;AAAV,SAAtC;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE,QAAC,MAAD;AAAA,sBACGX,KAAK,CAACiB,GAAN,CAAWC,IAAD,iBACT,QAAC,KAAD;AAAuB,cAAA,IAAI,EAAEA,IAAI,CAACC,IAAlC;AACE,cAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAAA,wBAEGF,IAAI,CAACN,OAAL,IAAgB,CAACA,OAAO,EAAxB,gBAA6B;AAAA;AAAA,+BAA7B,gBAEK,QAAC,IAAD,CAAM,UAAN;AAAA;AAAA;AAAA;AAAA;AAJR,eAAYM,IAAI,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsBD;;GAtCQX,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["//import { clear } from \"console\";\n//import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Menu from \"./utils/Menu\";\n//import PeliculaIndividual from \"./peliculas/PeliculaIndividual\";\nimport { Route, Switch } from \"react-router\";\n//import IndiceGeneros from \"./generos/IndiceGeneros\";\nimport { BrowserRouter } from \"react-router-dom\";\n//import LandingPage from \"./LandingPage\";\nimport rutas from \"./route-config\";\nimport configurarValidaciones from \"./utils/Validaciones\";\nimport AutenticacionContext from \"./auth/AutenticacionContext\";\nimport React, { useEffect, useState } from \"react\";\nimport { claim } from \"./auth/auth.model\";\nimport { obtenerClaims } from \"./auth/manejadorJWT\";\nimport { configurarInterceptor } from \"./utils/interceptores\";\n\n\nconfigurarValidaciones();\nconfigurarInterceptor();\n\nfunction App() {\n\n  const [claims, setClaims] = useState<claim[]>([]);\n\nuseEffect(()=>{\n  setClaims(obtenerClaims());\n},[])\n\n  function actualizar(claims: claim[]) {\n    setClaims(claims);\n  }\n\n  function esAdmin() {\n    return claims.findIndex(claim => claim.nombre === 'role' && claim.valor === 'admin') > -1;\n  }\n\n  return (\n    <>    \n      <BrowserRouter>\n        <AutenticacionContext.Provider value={{ claims, actualizar }}>\n          <Menu />\n          <div className=\"container\">\n            <Switch>\n              {rutas.map((ruta) => (\n                <Route key={ruta.path} path={ruta.path}\n                  exact={ruta.exact}>\n                  {ruta.esAdmin && !esAdmin() ? <>\n                    No Tiene Autorizaci√≥n para acceder a este componente\n                  </> : <ruta.componente />}\n\n                </Route>\n              ))}\n            </Switch>\n          </div>\n        </AutenticacionContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}