{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\auth\\\\FormularioAuth.tsx\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport FormGroupText from \"../utils/FormGroupText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormularioAuth(props) {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.modelo,\n    onSubmit: props.onSubmit,\n    validationSchema: Yup.object({\n      email: Yup.string().required('Este campo es requerido').email('Debe colocar un email válido'),\n      password: Yup.string().required('Este campo es requerido')\n    }),\n    children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Email\",\n        campo: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupText, {\n        label: \"Password\",\n        campo: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formikProps.isSubmitting,\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary\",\n        to: \"/\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = FormularioAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioAuth\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/auth/FormularioAuth.tsx"],"names":["Form","Formik","Yup","Button","Link","FormGroupText","FormularioAuth","props","modelo","onSubmit","object","email","string","required","password","formikProps","isSubmitting"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,QAA4C,QAA5C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAmD;AAC9D,sBACI,QAAC,MAAD;AAAQ,IAAA,aAAa,EAAEA,KAAK,CAACC,MAA7B;AACA,IAAA,QAAQ,EAAED,KAAK,CAACE,QADhB;AAEC,IAAA,gBAAgB,EAAEP,GAAG,CAACQ,MAAJ,CAAW;AACzBC,MAAAA,KAAK,EAAET,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EACHF,KADG,CACG,8BADH,CADkB;AAG1BG,MAAAA,QAAQ,EAAEZ,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB;AAHgB,KAAX,CAFnB;AAAA,cAQIE,WAAW,iBACR,QAAC,IAAD;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,OAArB;AAA6B,QAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,UAArB;AAAgC,QAAA,KAAK,EAAC,UAAtC;AAAiD,QAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIK,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEA,WAAW,CAACC,YAA9B;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJL,eAKK,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAoC,QAAA,EAAE,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALL;AAAA;AAAA;AAAA;AAAA;AAAA;AATP;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;KAtBuBV,c","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { credencialesUsuario } from \"./auth.model\";\r\nimport * as Yup from 'yup';\r\nimport Button from \"../utils/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormGroupText from \"../utils/FormGroupText\";\r\n\r\nexport default function FormularioAuth(props: formularioAuthProps){\r\n    return (\r\n        <Formik initialValues={props.modelo}\r\n        onSubmit={props.onSubmit} \r\n         validationSchema={Yup.object({\r\n             email: Yup.string().required('Este campo es requerido')\r\n                .email('Debe colocar un email válido'),\r\n            password: Yup.string().required('Este campo es requerido')\r\n         })}\r\n        >\r\n           {formikProps => (\r\n               <Form>\r\n                   <FormGroupText label=\"Email\" campo=\"email\" />\r\n                   <FormGroupText label=\"Password\" campo=\"password\" type=\"password\" />\r\n\r\n                    <Button disabled={formikProps.isSubmitting} type=\"submit\">Enviar</Button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/\">Cancelar</Link>\r\n\r\n               </Form>\r\n           )} \r\n        </Formik>\r\n    )\r\n}\r\n\r\ninterface formularioAuthProps{\r\n    modelo: credencialesUsuario;\r\n    onSubmit(valoreS: credencialesUsuario, acciones: FormikHelpers<credencialesUsuario>): void;\r\n}"]},"metadata":{},"sourceType":"module"}