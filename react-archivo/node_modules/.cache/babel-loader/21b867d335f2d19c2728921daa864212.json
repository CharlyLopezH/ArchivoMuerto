{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\utils\\\\ListadoGenerico.tsx\";\nimport Cargando from \"./Cargando\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListadoGenerico(props) {\n  if (!props.listado) {\n    if (props.cargandoUI) {\n      return props.cargandoUI;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 15\n    }, this);\n  } else if (props.listado.length === 0) {\n    if (props.listadoVacioUI) {\n      return props.listadoVacioUI;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No hay elementos para mostrar...\"\n    }, void 0, false);\n  } else {\n    return props.children;\n  }\n}\n_c = ListadoGenerico;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListadoGenerico\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/ListadoGenerico.tsx"],"names":["Cargando","ListadoGenerico","props","listado","cargandoUI","length","listadoVacioUI","children"],"mappings":";AACA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAsD;AACjE,MAAI,CAACA,KAAK,CAACC,OAAX,EAAmB;AACf,QAAID,KAAK,CAACE,UAAV,EAAsB;AAClB,aAAOF,KAAK,CAACE,UAAb;AACH;;AACD,wBAAM,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAN;AACH,GALD,MAKO,IAAIF,KAAK,CAACC,OAAN,CAAcE,MAAd,KAAuB,CAA3B,EAA8B;AACjC,QAAIH,KAAK,CAACI,cAAV,EAA0B;AACzB,aAAOJ,KAAK,CAACI,cAAb;AACA;;AACD,wBAAO;AAAA;AAAA,qBAAP;AACH,GALM,MAKA;AACH,WAAOJ,KAAK,CAACK,QAAb;AACH;AACJ;KAduBN,e","sourcesContent":["import { ReactElement } from \"react\";\r\nimport Cargando from \"./Cargando\";\r\n\r\nexport default function ListadoGenerico(props:iListadoGenericoProps) {\r\n    if (!props.listado){\r\n        if (props.cargandoUI) {\r\n            return props.cargandoUI;\r\n        }\r\n        return<Cargando/>\r\n    } else if (props.listado.length===0) {\r\n        if (props.listadoVacioUI) {\r\n         return props.listadoVacioUI;    \r\n        }\r\n        return <>No hay elementos para mostrar...</> \r\n    } else {\r\n        return props.children;\r\n    }\r\n}\r\n\r\ninterface iListadoGenericoProps {\r\n    listado:any;\r\n    children:ReactElement;\r\n    cargandoUI?:ReactElement;\r\n    listadoVacioUI?:ReactElement;\r\n}"]},"metadata":{},"sourceType":"module"}