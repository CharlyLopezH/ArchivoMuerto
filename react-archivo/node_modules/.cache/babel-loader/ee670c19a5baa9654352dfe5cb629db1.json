{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\actores\\\\CrearActores.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { urlActores } from \"../utils/endpoints\";\nimport { convertirActorAFormData } from \"../utils/FormDataUtils\";\nimport MostrarErrores from \"../utils/MostrarErrores\";\nimport FormularioActores from \"./FormularioActores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CrearActores() {\n  _s();\n\n  const [errores, setErrores] = useState([]);\n  const history = useHistory();\n\n  async function crear(actor) {\n    try {\n      const formData = convertirActorAFormData(actor);\n      await axios({\n        method: 'post',\n        url: urlActores,\n        data: formData,\n        headers: {\n          'Content-type': 'multipart/form-data'\n        }\n      });\n      history.push('/actores');\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registrar Actor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormularioActores, {\n      modelo: {\n        nombre: '',\n        fechaNacimiento: undefined\n      },\n      onSubmit: async valores => await crear(valores) //onSubmit={valores=>console.log(valores)} \n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/actores/CrearActor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CrearActores, \"mvxxA7bJVwbBgv9O6YGDCC1/83g=\", false, function () {\n  return [useHistory];\n});\n\n_c = CrearActores;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrearActores\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/actores/CrearActores.tsx"],"names":["axios","useState","Link","useHistory","urlActores","convertirActorAFormData","MostrarErrores","FormularioActores","CrearActores","errores","setErrores","history","crear","actor","formData","method","url","data","headers","push","error","response","nombre","fechaNacimiento","undefined","valores"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,uBAAT,QAAwC,wBAAxC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAMU,OAAO,GAACR,UAAU,EAAxB;;AAEJ,iBAAeS,KAAf,CAAqBC,KAArB,EAA8C;AAC1C,QAAI;AACA,YAAMC,QAAQ,GAAGT,uBAAuB,CAACQ,KAAD,CAAxC;AACA,YAAMb,KAAK,CAAC;AACRe,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,GAAG,EAAEZ,UAFG;AAGRa,QAAAA,IAAI,EAAEH,QAHE;AAIRI,QAAAA,OAAO,EAAE;AAAC,0BAAe;AAAhB;AAJD,OAAD,CAAX;AAMAP,MAAAA,OAAO,CAACQ,IAAR,CAAa,UAAb;AACH,KATD,CAUA,OAAMC,KAAN,EAAa;AACTV,MAAAA,UAAU,CAACU,KAAK,CAACC,QAAN,CAAeJ,IAAhB,CAAV;AACH;AACJ;;AAEG,sBACA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAER;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,iBAAD;AACA,MAAA,MAAM,EAAE;AAACa,QAAAA,MAAM,EAAC,EAAR;AAAYC,QAAAA,eAAe,EAAEC;AAA7B,OADR;AAEA,MAAA,QAAQ,EAAE,MAAMC,OAAN,IAAe,MAAMb,KAAK,CAACa,OAAD,CAFpC,CAGA;;AAHA;AAAA;AAAA;AAAA;AAAA,YAHA,eASA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,kBADA;AAaH;;GAjCuBjB,Y;UAENL,U;;;KAFMK,Y","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { urlActores } from \"../utils/endpoints\";\r\nimport { convertirActorAFormData } from \"../utils/FormDataUtils\";\r\nimport MostrarErrores from \"../utils/MostrarErrores\";\r\nimport { actorCreacionDTO } from \"./actores.model\";\r\nimport FormularioActores from \"./FormularioActores\";\r\n\r\nexport default function CrearActores(){\r\n    const [errores, setErrores] = useState<string[]>([]);\r\n    const history=useHistory();\r\n\r\nasync function crear(actor: actorCreacionDTO) {\r\n    try {\r\n        const formData = convertirActorAFormData(actor);\r\n        await axios({\r\n            method: 'post',\r\n            url: urlActores,\r\n            data: formData,\r\n            headers: {'Content-type':'multipart/form-data'}\r\n        });\r\n        history.push('/actores');\r\n    }\r\n    catch(error) {\r\n        setErrores(error.response.data);\r\n    }\r\n}\r\n\r\n    return (\r\n    <>\r\n    <h3>Registrar Actor</h3>\r\n    <MostrarErrores errores={errores} />\r\n    <FormularioActores \r\n    modelo={{nombre:'', fechaNacimiento: undefined}} \r\n    onSubmit={async valores=>await crear(valores)} \r\n    //onSubmit={valores=>console.log(valores)} \r\n    />\r\n    \r\n    <Link to=\"/actores/CrearActor\"></Link>\r\n    </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}