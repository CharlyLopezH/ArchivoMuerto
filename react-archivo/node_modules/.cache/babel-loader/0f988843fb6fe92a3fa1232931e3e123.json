{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\utils\\\\FormGroupImagen.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormikContext } from \"formik\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormGroupImagen(props) {\n  _s();\n\n  const divStyle = {\n    marginTop: \"10px\"\n  };\n  const imgStyle = {\n    width: \"450px\"\n  };\n  const [imagenBase64, setImagenBase64] = useState(\"\");\n  const [imagenURL, setImagenURL] = useState(props.imagenURL);\n  const {\n    values\n  } = useFormikContext();\n\n  const ManejarOnchange = e => {\n    if (e.currentTarget.files) {\n      const archivo = e.currentTarget.files[0];\n      aBase64(archivo).then(representacionBase64 => setImagenBase64(representacionBase64)).catch(error => console.error(error));\n      values[props.campo] = archivo;\n      setImagenURL('');\n    }\n  }; //Obtener representación base 64 del archivo\n\n\n  const aBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg, .jpeg, .png, .gif\",\n        onChange: ManejarOnchange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), imagenBase64 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          style: imgStyle,\n          src: imagenBase64,\n          alt: \"Imagen seleccionada...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : null, imagenURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          style: imgStyle,\n          src: imagenURL,\n          alt: \"Imagen seleccionada...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormGroupImagen, \"9aLubiJbO+HScsMthfh4iTTfSe4=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = FormGroupImagen;\nFormGroupImagen.defaultProps = {\n  imagenURL: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormGroupImagen\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/FormGroupImagen.tsx"],"names":["useFormikContext","useState","FormGroupImagen","props","divStyle","marginTop","imgStyle","width","imagenBase64","setImagenBase64","imagenURL","setImagenURL","values","ManejarOnchange","e","currentTarget","files","archivo","aBase64","then","representacionBase64","catch","error","console","campo","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","label","defaultProps"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,QAAjC;AACA,SAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAuD;AAAA;;AACpE,QAAMC,QAAQ,GAAG;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAjB;AACA,QAAMC,QAAQ,GAAG;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAjB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA0BV,QAAQ,CAACE,KAAK,CAACO,SAAP,CAAxC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAaZ,gBAAgB,EAAnC;;AAEA,QAAMa,eAAe,GAAIC,CAAD,IAAsC;AAC5D,QAAIA,CAAC,CAACC,aAAF,CAAgBC,KAApB,EAA2B;AACzB,YAAMC,OAAO,GAAGH,CAAC,CAACC,aAAF,CAAgBC,KAAhB,CAAsB,CAAtB,CAAhB;AACAE,MAAAA,OAAO,CAACD,OAAD,CAAP,CACGE,IADH,CACSC,oBAAD,IACJX,eAAe,CAACW,oBAAD,CAFnB,EAIGC,KAJH,CAIUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAJpB;AAKAV,MAAAA,MAAM,CAACT,KAAK,CAACqB,KAAP,CAAN,GAAsBP,OAAtB;AACAN,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GAXD,CAPoE,CAoBpE;;;AAEA,QAAMO,OAAO,GAAIO,IAAD,IAAgB;AAC9B,WAAO,IAAIC,OAAJ,CAAoB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC9C,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB;;AACAI,MAAAA,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;AACD,KAJM,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA,gBAAQ9B,KAAK,CAAC+B;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,MAAM,EAAC,yBAFT;AAGE,QAAA,QAAQ,EAAErB;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EASGL,YAAY,gBACX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAEJ,QAAZ;AAAA,qCAAuB;AAAK,UAAA,KAAK,EAAEE,QAAZ;AAAsB,UAAA,GAAG,EAAEE,YAA3B;AAAyC,UAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADW,GAKT,IAdN,EAgBSE,SAAS,gBACd;AAAA,6BACE;AAAK,QAAA,KAAK,EAAEN,QAAZ;AAAA,qCAAuB;AAAK,UAAA,KAAK,EAAEE,QAAZ;AAAsB,UAAA,GAAG,EAAEI,SAA3B;AAAsC,UAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADc,GAKZ,IArBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAzDuBR,e;UAKHF,gB;;;KALGE,e;AAgExBA,eAAe,CAACiC,YAAhB,GAA+B;AAC3BzB,EAAAA,SAAS,EAAC;AADiB,CAA/B","sourcesContent":["import { useFormikContext } from \"formik\";\r\nimport { ChangeEvent, useState } from \"react\";\r\n\r\nexport default function FormGroupImagen(props: iFormGroupImagenProps) {\r\n  const divStyle = { marginTop: \"10px\" };\r\n  const imgStyle = { width: \"450px\" };\r\n  const [imagenBase64, setImagenBase64] = useState(\"\");\r\n  const [imagenURL, setImagenURL]=useState(props.imagenURL);\r\n  const { values } = useFormikContext<any>();\r\n\r\n  const ManejarOnchange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files) {\r\n      const archivo = e.currentTarget.files[0];\r\n      aBase64(archivo)\r\n        .then((representacionBase64: string) =>\r\n          setImagenBase64(representacionBase64)\r\n        )\r\n        .catch((error) => console.error(error));\r\n      values[props.campo] = archivo;\r\n      setImagenURL('');\r\n    }\r\n  };\r\n\r\n  //Obtener representación base 64 del archivo\r\n\r\n  const aBase64 = (file: File) => {\r\n    return new Promise<string>((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result as string);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{props.label}</label>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".jpg, .jpeg, .png, .gif\"\r\n          onChange={ManejarOnchange}\r\n        />\r\n      </div>\r\n      {imagenBase64 ? (\r\n        <div>\r\n          <div style={divStyle}> <img style={imgStyle} src={imagenBase64} alt=\"Imagen seleccionada...\" />\r\n          </div>\r\n        </div>\r\n      ) : null\r\n      }\r\n            {imagenURL ? (\r\n        <div>\r\n          <div style={divStyle}> <img style={imgStyle} src={imagenURL} alt=\"Imagen seleccionada...\" />\r\n          </div>\r\n        </div>\r\n      ) : null\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\ninterface iFormGroupImagenProps {\r\n  campo: string;\r\n  label: string;\r\n  imagenURL: string;\r\n}\r\n\r\nFormGroupImagen.defaultProps = {\r\n    imagenURL:'',\r\n}\r\n"]},"metadata":{},"sourceType":"module"}