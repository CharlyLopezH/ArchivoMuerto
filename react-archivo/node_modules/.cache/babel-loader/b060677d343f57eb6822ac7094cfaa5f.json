{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\actores\\\\TypeAheadActores.tsx\",\n    _s = $RefreshSig$();\n\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { urlActores } from \"../utils/endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TypeAheadActores(props) {\n  _s();\n\n  const [opciones, setOpciones] = useState([]);\n  const [estaCargando, setEstaCargando] = useState(false);\n  const seleccion = [];\n  const [elementoArrastrado, setElementoArrastrado] = useState(undefined);\n\n  function manejarBusqueda(query) {\n    setEstaCargando(true);\n    axios.get(`${urlActores}/buscarPorNombre/${query}`).then(respuesta => {\n      setOpciones(respuesta.data);\n      setEstaCargando(false);\n    });\n  }\n\n  function manejarDragStart(actor) {\n    setElementoArrastrado(actor);\n  }\n\n  function manejarDragOver(actor) {\n    if (!elementoArrastrado) {\n      return;\n    }\n\n    if (actor.id !== elementoArrastrado.id) {\n      const elementoArrastradoIndice = props.actores.findIndex(x => x.id === elementoArrastrado.id);\n      const actorIndice = props.actores.findIndex(x => x.id === actor.id);\n      const actores = [...props.actores];\n      actores[actorIndice] = elementoArrastrado;\n      actores[elementoArrastradoIndice] = actor;\n      props.onAdd(actores);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Actores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n      id: \"typeahead\",\n      onChange: actores => {\n        if (props.actores.findIndex(x => x.id === actores[0].id) === -1) {\n          props.onAdd([...props.actores, actores[0]]);\n        }\n      },\n      options: opciones,\n      labelKey: actor => actor.nombre,\n      filterBy: () => true,\n      isLoading: estaCargando,\n      onSearch: manejarBusqueda,\n      placeholder: \"Escriba el nombre para la b\\xFAsqueda...\",\n      minLength: 2,\n      flip: true,\n      selected: seleccion,\n      renderMenuItemChildren: actor => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Imagen actor\",\n          src: actor.foto,\n          style: {\n            height: \"64px\",\n            marginRight: \"10px\",\n            width: \"64px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: actor.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: props.actores.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        draggable: true,\n        onDragStart: () => manejarDragStart(actor),\n        onDragOver: () => manejarDragOver(actor),\n        className: \"list-group-item  list-group-item-secondary\",\n        children: [props.listadoUI(actor), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-primary badge-pill\" // style={{marginLeft: '0.5rem'}} \n          ,\n          onClick: () => props.onRemove(actor),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TypeAheadActores, \"lQRutWdCMJsJe/1vxbMY+0PI68c=\");\n\n_c = TypeAheadActores;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeAheadActores\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/actores/TypeAheadActores.tsx"],"names":["AsyncTypeahead","useState","axios","urlActores","TypeAheadActores","props","opciones","setOpciones","estaCargando","setEstaCargando","seleccion","elementoArrastrado","setElementoArrastrado","undefined","manejarBusqueda","query","get","then","respuesta","data","manejarDragStart","actor","manejarDragOver","id","elementoArrastradoIndice","actores","findIndex","x","actorIndice","onAdd","nombre","foto","height","marginRight","width","map","listadoUI","onRemove"],"mappings":"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","sourcesContent":["import { actorPeliculaDTO } from \"./actores.model\";\r\nimport { AsyncTypeahead as AsyncTypeahead } from \"react-bootstrap-typeahead\";\r\nimport { ReactElement, useState } from \"react\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { urlActores } from \"../utils/endpoints\";\r\n\r\nexport default function TypeAheadActores(props: iTypeAheadActoresProps) {\r\n  \r\n  const [opciones, setOpciones] = useState<actorPeliculaDTO[]>([]);\r\n\r\n  const [estaCargando, setEstaCargando] = useState(false);\r\n\r\n  const seleccion: actorPeliculaDTO[]=[];\r\n\r\n  const [elementoArrastrado, setElementoArrastrado] = useState<actorPeliculaDTO | undefined>(undefined)\r\n\r\n  function manejarBusqueda(query: string){\r\n    setEstaCargando(true);\r\n\r\n    axios.get(`${urlActores}/buscarPorNombre/${query}`)\r\n        .then((respuesta: AxiosResponse<actorPeliculaDTO[]>) => {\r\n            setOpciones(respuesta.data);\r\n            setEstaCargando(false);\r\n        })\r\n}\r\n\r\n  function manejarDragStart(actor: actorPeliculaDTO) {\r\n    setElementoArrastrado(actor);\r\n  }\r\n\r\n  function manejarDragOver(actor: actorPeliculaDTO) {\r\n    if (!elementoArrastrado) {\r\n      return;\r\n    }\r\n    if(actor.id !== elementoArrastrado.id){\r\n      const elementoArrastradoIndice = \r\n            props.actores.findIndex(x => x.id === elementoArrastrado.id);\r\n      const actorIndice =\r\n            props.actores.findIndex(x => x.id === actor.id);\r\n      const actores  = [...props.actores];\r\n      actores[actorIndice] = elementoArrastrado;\r\n      actores[elementoArrastradoIndice] = actor;\r\n      props.onAdd(actores);\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label>Actores</label>\r\n      <AsyncTypeahead\r\n        id=\"typeahead\"\r\n        onChange={(actores) => {\r\n          if (props.actores.findIndex((x) => x.id === actores[0].id) === -1) {\r\n            props.onAdd([...props.actores, actores[0]]);\r\n          }\r\n        }}\r\n        options={opciones}\r\n        labelKey={(actor) => actor.nombre}\r\n        filterBy={()=>true}\r\n        isLoading={estaCargando}\r\n        onSearch={manejarBusqueda}\r\n        placeholder=\"Escriba el nombre para la b√∫squeda...\"\r\n        minLength={2}\r\n        flip={true}\r\n        selected={seleccion}\r\n        renderMenuItemChildren={(actor) => (\r\n          <>\r\n            <img\r\n              alt=\"Imagen actor\"\r\n              src={actor.foto}\r\n              style={{\r\n                height: \"64px\",\r\n                marginRight: \"10px\",\r\n                width: \"64px\",\r\n              }}\r\n            />\r\n            <span>{actor.nombre}</span>\r\n          </>\r\n        )}\r\n      />\r\n      <ul className=\"list-group\">\r\n        {props.actores.map(actor => <li \r\n        draggable={true}\r\n        onDragStart={()=>manejarDragStart(actor)}\r\n        onDragOver={()=>manejarDragOver(actor)}\r\n        className=\"list-group-item  list-group-item-secondary\"\r\n        key={actor.id}> \r\n        {props.listadoUI(actor)}\r\n        <span className=\"badge badge-primary badge-pill\"\r\n        // style={{marginLeft: '0.5rem'}} \r\n        onClick={()=>props.onRemove(actor)}\r\n        >\r\n          X\r\n        </span>\r\n        </li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\ninterface iTypeAheadActoresProps {\r\n  actores: actorPeliculaDTO[];\r\n  onAdd(actores: actorPeliculaDTO[]): void;\r\n  listadoUI(actor: actorPeliculaDTO): ReactElement;\r\n  onRemove(actor: actorPeliculaDTO):void;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}