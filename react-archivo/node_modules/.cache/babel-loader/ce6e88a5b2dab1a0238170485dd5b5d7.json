{"ast":null,"code":"// This module is compiled away!\n//\n// While micromark works based on character codes, this module includes the\n// string versions of ’em.\n// The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n// are available here.\nexport const values = {\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n};","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/node_modules/micromark-util-symbol/values.js"],"names":["values","ht","lf","cr","space","exclamationMark","quotationMark","numberSign","dollarSign","percentSign","ampersand","apostrophe","leftParenthesis","rightParenthesis","asterisk","plusSign","comma","dash","dot","slash","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","colon","semicolon","lessThan","equalsTo","greaterThan","questionMark","atSign","uppercaseA","uppercaseB","uppercaseC","uppercaseD","uppercaseE","uppercaseF","uppercaseG","uppercaseH","uppercaseI","uppercaseJ","uppercaseK","uppercaseL","uppercaseM","uppercaseN","uppercaseO","uppercaseP","uppercaseQ","uppercaseR","uppercaseS","uppercaseT","uppercaseU","uppercaseV","uppercaseW","uppercaseX","uppercaseY","uppercaseZ","leftSquareBracket","backslash","rightSquareBracket","caret","underscore","graveAccent","lowercaseA","lowercaseB","lowercaseC","lowercaseD","lowercaseE","lowercaseF","lowercaseG","lowercaseH","lowercaseI","lowercaseJ","lowercaseK","lowercaseL","lowercaseM","lowercaseN","lowercaseO","lowercaseP","lowercaseQ","lowercaseR","lowercaseS","lowercaseT","lowercaseU","lowercaseV","lowercaseW","lowercaseX","lowercaseY","lowercaseZ","leftCurlyBrace","verticalBar","rightCurlyBrace","tilde","replacementCharacter"],"mappings":"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","sourcesContent":["// This module is compiled away!\n//\n// While micromark works based on character codes, this module includes the\n// string versions of ’em.\n// The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n// are available here.\nexport const values = {\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n}\n"]},"metadata":{},"sourceType":"module"}