{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\utils\\\\IndiceEntidad.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport confirmar from \"./Confirmar\";\nimport ListadoGenerico from \"./ListadoGenerico\";\nimport Paginacion from \"./Paginacion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function IndiceEntidad(props) {\n  _s();\n\n  const [entidades, setEntidades] = useState();\n  const [totalDePaginas, setTotalDePaginas] = useState(0);\n  const [recordsPorPagina, setRecordsPorPagina] = useState(10);\n  const [pagina, setPagina] = useState(1);\n  useEffect(() => {\n    cargarDatos();\n  }, [pagina, recordsPorPagina]);\n\n  function cargarDatos() {\n    axios.get(props.url, {\n      params: {\n        pagina,\n        recordsPorPagina: recordsPorPagina\n      }\n    }).then(respuesta => {\n      const totalDeRegistros = parseInt(respuesta.headers['cantidadtotalregistros'], 10);\n      setTotalDePaginas(Math.ceil(totalDeRegistros / recordsPorPagina));\n      setEntidades(respuesta.data);\n    });\n  }\n\n  async function borrar(id) {\n    try {\n      await axios.delete(`${props.url}/${id}`);\n      cargarDatos();\n    } catch (error) {\n      console.log(error.response.data);\n    }\n  }\n\n  const botones = (urlEditar, id) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-success\",\n      to: urlEditar,\n      children: \" Editar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => confirmar(() => borrar(id)),\n      className: \"btn btn-danger\",\n      children: \"Borrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), props.urlCrear ? /*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-primary\",\n      to: props.urlCrear,\n      children: [\" Crear \", props.nombreEntidad, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      style: {\n        width: '150px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Registros por p\\xE1gina:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"input-group mb-1\",\n        defaultValue: 10,\n        onChange: e => {\n          setPagina(1);\n          setRecordsPorPagina(parseInt(e.currentTarget.value, 10));\n        },\n        children: [\"||\", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginacion, {\n      cantidadTotalDePaginas: totalDePaginas,\n      paginaActual: pagina,\n      onChange: nuevaPagina => setPagina(nuevaPagina),\n      radio: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListadoGenerico, {\n      listado: entidades,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [\" \", props.children(entidades, botones), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IndiceEntidad, \"nrwrdIgvOZjkK3es+GjaS3KooTs=\");\n\n_c = IndiceEntidad;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndiceEntidad\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/IndiceEntidad.tsx"],"names":["axios","useState","useEffect","Link","Button","confirmar","ListadoGenerico","Paginacion","IndiceEntidad","props","entidades","setEntidades","totalDePaginas","setTotalDePaginas","recordsPorPagina","setRecordsPorPagina","pagina","setPagina","cargarDatos","get","url","params","then","respuesta","totalDeRegistros","parseInt","headers","Math","ceil","data","borrar","id","delete","error","console","log","response","botones","urlEditar","titulo","urlCrear","nombreEntidad","width","e","currentTarget","value","nuevaPagina","children"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ReactElement } from \"react-markdown/lib/react-markdown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport confirmar from \"./Confirmar\";\r\nimport ListadoGenerico from \"./ListadoGenerico\";\r\nimport Paginacion from \"./Paginacion\";\r\n\r\nexport default function IndiceEntidad<T>(props: indiceEntidadProps<T>) {\r\n  const [entidades, setEntidades] = useState<T[]>();\r\n  const [totalDePaginas, setTotalDePaginas] = useState(0);\r\n  const [recordsPorPagina, setRecordsPorPagina] = useState(10);\r\n  const [pagina, setPagina] = useState(1);\r\n\r\n  useEffect(() => {\r\n    cargarDatos()\r\n  }, [pagina, recordsPorPagina]);\r\n\r\n  function cargarDatos() {\r\n    axios.get(props.url, {\r\n      params: { pagina, recordsPorPagina: recordsPorPagina }\r\n    })\r\n      .then((respuesta: AxiosResponse<T[]>) => {\r\n        const totalDeRegistros =\r\n          parseInt(respuesta.headers['cantidadtotalregistros'], 10);\r\n        setTotalDePaginas(Math.ceil(totalDeRegistros / recordsPorPagina));\r\n        setEntidades(respuesta.data);\r\n      })\r\n  }\r\n\r\n  async function borrar(id: number) {\r\n    try {\r\n      await axios.delete(`${props.url}/${id}`)\r\n      cargarDatos();\r\n    }\r\n    catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  }\r\n\r\n  const botones = (urlEditar: string, id: number) => <>\r\n\r\n    <Link className=\"btn btn-success\" to={urlEditar}> Editar </Link>\r\n    <Button onClick={() => confirmar(() => borrar(id))} className=\"btn btn-danger\">Borrar</Button>\r\n\r\n\r\n  </>\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>{props.titulo}</h3>\r\n      {props.urlCrear ?\r\n        <Link className=\"btn btn-primary\" to={props.urlCrear}> Crear {props.nombreEntidad} </Link>\r\n        : null}\r\n\r\n      <div className=\"form-group\" style={{ width: '150px' }}>\r\n        <label>Registros por página:</label>\r\n        <select\r\n          className=\"input-group mb-1\"\r\n          defaultValue={10}\r\n          onChange={e => {\r\n            setPagina(1);\r\n            setRecordsPorPagina(parseInt(e.currentTarget.value, 10))\r\n          }}>\r\n          ||<option value=\"5\">5</option>\r\n          <option value=\"10\" >10</option>\r\n          <option value=\"25\">25</option>\r\n          <option value=\"50\">50</option>\r\n        </select>\r\n\r\n      </div>\r\n\r\n      <Paginacion cantidadTotalDePaginas={totalDePaginas}\r\n        paginaActual={pagina} onChange={nuevaPagina => setPagina(nuevaPagina)}\r\n        radio={3}\r\n      />\r\n\r\n      <ListadoGenerico listado={entidades}>\r\n        <table className=\"table table-striped\"> {props.children(entidades!, botones)} </table>\r\n\r\n      </ListadoGenerico>\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\ninterface indiceEntidadProps<T> {\r\n\r\n  url: string;\r\n  urlCrear?: string;\r\n  children(entidades: T[], botones: (urlEditar: string, id: number) => ReactElement): ReactElement;\r\n  titulo: string;\r\n  nombreEntidad?: string;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}