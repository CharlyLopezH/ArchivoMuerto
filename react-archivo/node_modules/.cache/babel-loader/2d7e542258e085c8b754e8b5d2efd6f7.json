{"ast":null,"code":"const llaveToken = \"token\";\nconst llaveExpiracion = \"token-expiracion\";\nexport function guardarTokenLocalStorage(autenticacion) {\n  localStorage.setItem(llaveToken, autenticacion.token);\n  localStorage.setItem(llaveExpiracion, autenticacion.expiracion.toString());\n} //Devuelve un arreglo de claims\n\nexport function obtenerClaims() {\n  const token = localStorage.getItem(llaveToken);\n\n  if (!token) {\n    return [];\n  }\n\n  const expiracion = localStorage.getItem(llaveExpiracion);\n  const expiracionFecha = new Date(expiracion);\n\n  if (expiracionFecha <= new Date()) {\n    logout();\n    return [];\n  }\n\n  const dataToken = JSON.parse(atob(token.split(\".\")[1]));\n  const respuesta = [];\n\n  for (const propiedad in dataToken) {\n    respuesta.push({\n      nombre: propiedad,\n      valor: dataToken[propiedad]\n    });\n  }\n\n  return respuesta;\n}\nexport function logout() {\n  localStorage.removeItem(llaveToken);\n  localStorage.removeItem(llaveExpiracion);\n}\nexport function obtenerToken() {\n  return localStorage.getItem(llaveToken);\n}","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/auth/manejadorJWT.ts"],"names":["llaveToken","llaveExpiracion","guardarTokenLocalStorage","autenticacion","localStorage","setItem","token","expiracion","toString","obtenerClaims","getItem","expiracionFecha","Date","logout","dataToken","JSON","parse","atob","split","respuesta","propiedad","push","nombre","valor","removeItem","obtenerToken"],"mappings":"AAEA,MAAMA,UAAU,GAAG,OAAnB;AACA,MAAMC,eAAe,GAAG,kBAAxB;AAEA,OAAO,SAASC,wBAAT,CAAkCC,aAAlC,EAAwE;AAC3EC,EAAAA,YAAY,CAACC,OAAb,CAAqBL,UAArB,EAAiCG,aAAa,CAACG,KAA/C;AACAF,EAAAA,YAAY,CAACC,OAAb,CAAqBJ,eAArB,EAAsCE,aAAa,CAACI,UAAd,CAAyBC,QAAzB,EAAtC;AACH,C,CAED;;AACA,OAAO,SAASC,aAAT,GAAiC;AACpC,QAAMH,KAAK,GAAGF,YAAY,CAACM,OAAb,CAAqBV,UAArB,CAAd;;AAEA,MAAI,CAACM,KAAL,EAAW;AACP,WAAO,EAAP;AACH;;AAED,QAAMC,UAAU,GAAGH,YAAY,CAACM,OAAb,CAAqBT,eAArB,CAAnB;AACA,QAAMU,eAAe,GAAG,IAAIC,IAAJ,CAASL,UAAT,CAAxB;;AAEA,MAAII,eAAe,IAAI,IAAIC,IAAJ,EAAvB,EAAkC;AAC9BC,IAAAA,MAAM;AACN,WAAO,EAAP;AACH;;AAED,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACX,KAAK,CAACY,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,CAAlB;AACA,QAAMC,SAAkB,GAAG,EAA3B;;AACA,OAAK,MAAMC,SAAX,IAAwBN,SAAxB,EAAkC;AAC9BK,IAAAA,SAAS,CAACE,IAAV,CAAe;AAACC,MAAAA,MAAM,EAAEF,SAAT;AAAoBG,MAAAA,KAAK,EAAET,SAAS,CAACM,SAAD;AAApC,KAAf;AACH;;AAED,SAAOD,SAAP;AACH;AAED,OAAO,SAASN,MAAT,GAAiB;AACpBT,EAAAA,YAAY,CAACoB,UAAb,CAAwBxB,UAAxB;AACAI,EAAAA,YAAY,CAACoB,UAAb,CAAwBvB,eAAxB;AACH;AAED,OAAO,SAASwB,YAAT,GAAuB;AAC1B,SAAOrB,YAAY,CAACM,OAAb,CAAqBV,UAArB,CAAP;AACH","sourcesContent":["import { claim, respuestaAutenticacion } from \"./auth.model\";\r\n\r\nconst llaveToken = \"token\";\r\nconst llaveExpiracion = \"token-expiracion\"\r\n\r\nexport function guardarTokenLocalStorage(autenticacion: respuestaAutenticacion){\r\n    localStorage.setItem(llaveToken, autenticacion.token);\r\n    localStorage.setItem(llaveExpiracion, autenticacion.expiracion.toString());\r\n}\r\n\r\n//Devuelve un arreglo de claims\r\nexport function obtenerClaims(): claim[]{\r\n    const token = localStorage.getItem(llaveToken);\r\n\r\n    if (!token){\r\n        return [];\r\n    }\r\n\r\n    const expiracion = localStorage.getItem(llaveExpiracion)!;\r\n    const expiracionFecha = new Date(expiracion);\r\n\r\n    if (expiracionFecha <= new Date()){\r\n        logout();\r\n        return [];\r\n    }\r\n\r\n    const dataToken = JSON.parse(atob(token.split(\".\")[1]));\r\n    const respuesta: claim[] = [];\r\n    for (const propiedad in dataToken){\r\n        respuesta.push({nombre: propiedad, valor: dataToken[propiedad]});\r\n    }\r\n\r\n    return respuesta;\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(llaveToken);\r\n    localStorage.removeItem(llaveExpiracion);\r\n}\r\n\r\nexport function obtenerToken(){\r\n    return localStorage.getItem(llaveToken);\r\n}"]},"metadata":{},"sourceType":"module"}