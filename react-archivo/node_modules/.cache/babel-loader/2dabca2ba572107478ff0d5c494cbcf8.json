{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\generos\\\\FormularioGeneros.tsx\";\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../utils/Button\";\nimport MyFormGroupText from \"../utils/FormGroupText\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//Reutilización de Formulario de Captura (Creación y edición es prácticamente lo mismo)\nexport default function FormularioGeneros(props) {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.modelo,\n    onSubmit: props.onSubmit,\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"Este campo es obligatorio\") //.max(25,'La longitud máxima es de 25 caracteres')\n      // .primeraLetraMayuscula(),\n\n    }),\n    children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(MyFormGroupText, {\n        campo: \"nombre\",\n        label: \"Nombre\",\n        placeHolder: \"Introducir G\\xE9nero...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formikProps.isSubmitting,\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary\",\n        to: \"/generos\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = FormularioGeneros;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioGeneros\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/generos/FormularioGeneros.tsx"],"names":["Formik","Form","Link","Button","MyFormGroupText","Yup","FormularioGeneros","props","modelo","onSubmit","object","nombre","string","required","formikProps","isSubmitting"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA4C,QAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAGA;AACA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAA6D;AAC5E,sBACI,QAAC,MAAD;AACA,IAAA,aAAa,EAAEA,KAAK,CAACC,MADrB;AAEA,IAAA,QAAQ,EAAED,KAAK,CAACE,QAFhB;AAGA,IAAA,gBAAgB,EAAEJ,GAAG,CAACK,MAAJ,CAAW;AAC3BC,MAAAA,MAAM,EAAEN,GAAG,CAACO,MAAJ,GACLC,QADK,CACI,2BADJ,CADmB,CAGzB;AACA;;AAJyB,KAAX,CAHlB;AAAA,cAUEC,WAAD,iBACC,QAAC,IAAD;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,QAAvB;AAAiC,QAAA,KAAK,EAAC,QAAvC;AAAgD,QAAA,WAAW,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEA,WAAW,CAACC,YAA9B;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAoC,QAAA,EAAE,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBC;KAxBuBT,iB","sourcesContent":["import { Formik, Form, FormikHelpers } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../utils/Button\";\r\nimport MyFormGroupText from \"../utils/FormGroupText\";\r\nimport * as Yup from 'yup';\r\nimport { generoCreacionDTO } from \"./generos.model\";\r\n\r\n//Reutilización de Formulario de Captura (Creación y edición es prácticamente lo mismo)\r\nexport default function FormularioGeneros(props: iModelFormularioGeneroDTO) {\r\nreturn (\r\n    <Formik\r\n    initialValues={props.modelo}\r\n    onSubmit={props.onSubmit}\r\n    validationSchema={Yup.object({\r\n      nombre: Yup.string()\r\n        .required(\"Este campo es obligatorio\")\r\n        //.max(25,'La longitud máxima es de 25 caracteres')\r\n        // .primeraLetraMayuscula(),\r\n    })}\r\n  >\r\n    {(formikProps) => (\r\n      <Form>\r\n        <MyFormGroupText campo=\"nombre\"  label=\"Nombre\" placeHolder=\"Introducir Género...\"/>\r\n        <Button disabled={formikProps.isSubmitting} type=\"submit\">Salvar</Button>\r\n        <Link className=\"btn btn-secondary\" to=\"/generos\">\r\n          Cancelar\r\n        </Link>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n\r\n)    \r\n}\r\n\r\ninterface iModelFormularioGeneroDTO {\r\n    modelo: generoCreacionDTO;\r\n    onSubmit(valores: generoCreacionDTO, accion:FormikHelpers<generoCreacionDTO>):void;\r\n}"]},"metadata":{},"sourceType":"module"}