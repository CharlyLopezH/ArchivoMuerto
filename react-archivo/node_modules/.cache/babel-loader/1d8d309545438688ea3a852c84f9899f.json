{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\utils\\\\Mapa.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { MapContainer, Marker, Popup, TileLayer, useMapEvent } from 'react-leaflet';\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/leaflet.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconAnchor: [16, 37]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nexport default function Mapa(props) {\n  _s();\n\n  const [coordenadas, setCoordenadas] = useState(props.coordenadas);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [20.634945159114743, -103.41040257092139],\n    zoom: 14,\n    style: {\n      height: props.height\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"React Pel\\xEDculas\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), props.soloLectura ? null : /*#__PURE__*/_jsxDEV(ClickMapa, {\n      setPunto: coordenadas => {\n        setCoordenadas([coordenadas]);\n        props.manejarClickMapa(coordenadas);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }, this), coordenadas.map(coordenada => /*#__PURE__*/_jsxDEV(Marcador, { ...coordenada\n    }, coordenada.lat + coordenada.lng, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 44\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapa, \"1S+MWdzAyb2XquGgtbGg130K6gI=\");\n\n_c = Mapa;\n\nfunction ClickMapa(props) {\n  _s2();\n\n  useMapEvent('click', e => {\n    props.setPunto({\n      lat: e.latlng.lat,\n      lng: e.latlng.lng\n    });\n  });\n  return null;\n}\n\n_s2(ClickMapa, \"UJFMGIyDtKpxgOUCFJT9iLs+CFY=\", false, function () {\n  return [useMapEvent];\n});\n\n_c2 = ClickMapa;\n\nfunction Marcador(props) {\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: [props.lat, props.lng],\n    children: props.nombre ? /*#__PURE__*/_jsxDEV(Popup, {\n      children: props.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Marcador;\nMapa.defaultProps = {\n  height: '500px',\n  soloLectura: false,\n  manejarClickMapa: () => {}\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Mapa\");\n$RefreshReg$(_c2, \"ClickMapa\");\n$RefreshReg$(_c3, \"Marcador\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/Mapa.tsx"],"names":["MapContainer","Marker","Popup","TileLayer","useMapEvent","L","icon","iconShadow","useState","DefaultIcon","iconUrl","shadowUrl","iconAnchor","prototype","options","Mapa","props","coordenadas","setCoordenadas","height","soloLectura","manejarClickMapa","map","coordenada","lat","lng","ClickMapa","e","setPunto","latlng","Marcador","nombre","defaultProps"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,WAAjD,QAAoE,eAApE;AACA,OAAOC,CAAP,MAAyB,SAAzB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAO,0BAAP;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAIC,WAAW,GAAGJ,CAAC,CAACC,IAAF,CAAO;AACrBI,EAAAA,OAAO,EAAEJ,IADY;AAErBK,EAAAA,SAAS,EAAEJ,UAFU;AAGrBK,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AAHS,CAAP,CAAlB;AAMAP,CAAC,CAACJ,MAAF,CAASY,SAAT,CAAmBC,OAAnB,CAA2BR,IAA3B,GAAkCG,WAAlC;AAEA,eAAe,SAASM,IAAT,CAAcC,KAAd,EAAgC;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAkBQ,KAAK,CAACC,WAAxB,CAA9C;AACA,sBACI,QAAC,YAAD;AAAc,IAAA,MAAM,EAAE,CAAC,kBAAD,EAAqB,CAAC,kBAAtB,CAAtB;AAAiE,IAAA,IAAI,EAAE,EAAvE;AAA2E,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAEH,KAAK,CAACG;AAAhB,KAAlF;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,oBAAvB;AACI,MAAA,GAAG,EAAC;AADR;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKH,KAAK,CAACI,WAAN,GAAoB,IAApB,gBAA2B,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEH,WAAW,IAAI;AAC5DC,QAAAA,cAAc,CAAC,CAACD,WAAD,CAAD,CAAd;AACAD,QAAAA,KAAK,CAACK,gBAAN,CAAuBJ,WAAvB;AACH;AAH2B;AAAA;AAAA;AAAA;AAAA,YALhC,EAWKA,WAAW,CAACK,GAAZ,CAAgBC,UAAU,iBAAI,QAAC,QAAD,OAAoDA;AAApD,OAAeA,UAAU,CAACC,GAAX,GAAiBD,UAAU,CAACE,GAA3C;AAAA;AAAA;AAAA;AAAA,YAA9B,CAXL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAjBuBV,I;;KAAAA,I;;AAkBxB,SAASW,SAAT,CAAmBV,KAAnB,EAA2C;AAAA;;AACvCZ,EAAAA,WAAW,CAAC,OAAD,EAAUuB,CAAC,IAAI;AACtBX,IAAAA,KAAK,CAACY,QAAN,CAAe;AAAEJ,MAAAA,GAAG,EAAEG,CAAC,CAACE,MAAF,CAASL,GAAhB;AAAqBC,MAAAA,GAAG,EAAEE,CAAC,CAACE,MAAF,CAASJ;AAAnC,KAAf;AACH,GAFU,CAAX;AAGA,SAAO,IAAP;AACH;;IALQC,S;UACLtB,W;;;MADKsB,S;;AAmBT,SAASI,QAAT,CAAkBd,KAAlB,EAAwC;AACpC,sBACI,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACA,KAAK,CAACQ,GAAP,EAAYR,KAAK,CAACS,GAAlB,CAAlB;AAAA,cACKT,KAAK,CAACe,MAAN,gBAAe,QAAC,KAAD;AAAA,gBAAQf,KAAK,CAACe;AAAd;AAAA;AAAA;AAAA;AAAA,YAAf,GAA+C;AADpD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQD,Q;AAQTf,IAAI,CAACiB,YAAL,GAAoB;AAChBb,EAAAA,MAAM,EAAE,OADQ;AAEhBC,EAAAA,WAAW,EAAE,KAFG;AAGhBC,EAAAA,gBAAgB,EAAE,MAAM,CAAG;AAHX,CAApB","sourcesContent":["import { MapContainer, Marker, Popup, TileLayer, useMapEvent } from 'react-leaflet';\r\nimport L, { popup } from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { coordenadaDTO } from './coordenadas.model';\r\nimport { useState } from 'react';\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow,\r\n    iconAnchor: [16, 37],\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nexport default function Mapa(props: mapaProps) {\r\n    const [coordenadas, setCoordenadas] = useState<coordenadaDTO[]>(props.coordenadas)\r\n    return (\r\n        <MapContainer center={[20.634945159114743, -103.41040257092139]} zoom={14} style={{ height: props.height }} >\r\n            <TileLayer attribution=\"React PelÃ­culas\"\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                \r\n\r\n            {props.soloLectura ? null : <ClickMapa setPunto={coordenadas => {\r\n                setCoordenadas([coordenadas]);\r\n                props.manejarClickMapa(coordenadas);\r\n            }} />}\r\n\r\n\r\n            {coordenadas.map(coordenada => <Marcador key={coordenada.lat + coordenada.lng} {...coordenada} />)}\r\n        </MapContainer>\r\n    )\r\n}\r\nfunction ClickMapa(props: iClickMapaProps) {\r\n    useMapEvent('click', e => {\r\n        props.setPunto({ lat: e.latlng.lat, lng: e.latlng.lng })\r\n    })\r\n    return null;\r\n}\r\n\r\ninterface iClickMapaProps {\r\n    setPunto(coordenadas: coordenadaDTO): void;\r\n\r\n}\r\n\r\ninterface mapaProps {\r\n    height: string;\r\n    coordenadas: coordenadaDTO[];\r\n    manejarClickMapa(coordenadas: coordenadaDTO): void;\r\n    soloLectura: boolean;\r\n}\r\n\r\nfunction Marcador(props: coordenadaDTO) {\r\n    return (\r\n        <Marker position={[props.lat, props.lng]}>\r\n            {props.nombre ? <Popup>{props.nombre}</Popup> : null} \r\n        </Marker>\r\n    )\r\n}\r\n\r\nMapa.defaultProps = {\r\n    height: '500px',\r\n    soloLectura: false,\r\n    manejarClickMapa: () => { }\r\n}"]},"metadata":{},"sourceType":"module"}