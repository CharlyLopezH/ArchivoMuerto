{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\utils\\\\EditarEntidad.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Cargando from \"./Cargando\";\nimport MostrarErrores from \"./MostrarErrores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditarEntidad(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [entidad, setEntidad] = useState();\n  const [errores, setErrores] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`${props.url}/${id}`).then(respuesta => {\n      setEntidad(props.transformar(respuesta.data));\n    }); //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function editar(entidadEditar) {\n    try {\n      if (props.transformarFormData) {\n        const formData = props.transformarFormData(entidadEditar);\n        await axios({\n          method: 'put',\n          url: `${props.url}/${id}`,\n          data: formData,\n          headers: {\n            'Content-type': 'multipart/form-data'\n          }\n        });\n      } else {\n        await axios.put(`${props.url}/${id}`, entidadEditar);\n      }\n\n      history.push(props.urlIndice);\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Editar \", props.nombreEntidad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), entidad ? props.children(entidad, editar) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditarEntidad, \"XYcQ0cOJZHunoH4Z95EPjocIn7o=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditarEntidad;\nEditarEntidad.defaultProps = {\n  transformar: entidad => entidad\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarEntidad\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/EditarEntidad.tsx"],"names":["axios","useState","useEffect","useParams","useHistory","Cargando","MostrarErrores","EditarEntidad","props","id","entidad","setEntidad","errores","setErrores","history","get","url","then","respuesta","transformar","data","editar","entidadEditar","transformarFormData","formData","method","headers","put","push","urlIndice","error","response","nombreEntidad","children","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,eAAe,SAASC,aAAT,CAA6CC,KAA7C,EAA4F;AAAA;;AAE3G,QAAM;AAACC,IAAAA;AAAD,MAASN,SAAS,EAAxB;AACA,QAAM,CAACO,OAAD,EAASC,UAAT,IAAqBV,QAAQ,EAAnC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAqBZ,QAAQ,CAAW,EAAX,CAAnC;AACA,QAAMa,OAAO,GAACV,UAAU,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAK;AACXF,IAAAA,KAAK,CAACe,GAAN,CAAW,GAAEP,KAAK,CAACQ,GAAI,IAAGP,EAAG,EAA7B,EAAiCQ,IAAjC,CAAuCC,SAAD,IAAsC;AAC1EP,MAAAA,UAAU,CAACH,KAAK,CAACW,WAAN,CAAkBD,SAAS,CAACE,IAA5B,CAAD,CAAV;AACD,KAFD,EADW,CAIX;AACD,GALM,EAKL,EALK,CAAT;;AAOE,iBAAeC,MAAf,CAAsBC,aAAtB,EAAgD;AAC9C,QAAG;AACD,UAAGd,KAAK,CAACe,mBAAT,EAA6B;AAC3B,cAAMC,QAAQ,GAAGhB,KAAK,CAACe,mBAAN,CAA0BD,aAA1B,CAAjB;AACA,cAAMtB,KAAK,CAAC;AACRyB,UAAAA,MAAM,EAAE,KADA;AAERT,UAAAA,GAAG,EAAE,GAAER,KAAK,CAACQ,GAAI,IAAGP,EAAG,EAFf;AAGRW,UAAAA,IAAI,EAAEI,QAHE;AAIRE,UAAAA,OAAO,EAAE;AAAC,4BAAe;AAAhB;AAJD,SAAD,CAAX;AAMD,OARD,MAQO;AACP,cAAM1B,KAAK,CAAC2B,GAAN,CAAW,GAAEnB,KAAK,CAACQ,GAAI,IAAGP,EAAG,EAA7B,EAAgCa,aAAhC,CAAN;AACC;;AACDR,MAAAA,OAAO,CAACc,IAAR,CAAapB,KAAK,CAACqB,SAAnB;AACD,KAbD,CAcA,OAAOC,KAAP,EAAc;AACZjB,MAAAA,UAAU,CAACiB,KAAK,CAACC,QAAN,CAAeX,IAAhB,CAAV;AACD;AACF;;AACH,sBACI;AAAA,4BACA;AAAA,4BAAYZ,KAAK,CAACwB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAIpB;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFA,EAGCF,OAAO,GAAGF,KAAK,CAACyB,QAAN,CAAevB,OAAf,EAAwBW,MAAxB,CAAH,gBAAoC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAH5C;AAAA,kBADJ;AAUC;;GA3CuBd,a;UAETJ,S,EAGDC,U;;;KALUG,a;AAsDxBA,aAAa,CAAC2B,YAAd,GAA6B;AACzBf,EAAAA,WAAW,EAAGT,OAAD,IAAiBA;AADL,CAA7B","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ReactElement } from \"react-markdown/lib/react-markdown\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Cargando from \"./Cargando\";\r\nimport MostrarErrores from \"./MostrarErrores\";\r\n\r\nexport default function EditarEntidad <TCreacion, TLectura>(props: editarEntidadProps<TCreacion, TLectura>){\r\n\r\nconst {id}:any=useParams();\r\nconst [entidad,setEntidad]=useState<TCreacion>();\r\nconst [errores,setErrores]=useState<string[]>([]);\r\nconst history=useHistory();\r\n\r\nuseEffect(()=> {\r\n    axios.get(`${props.url}/${id}` ).then((respuesta:AxiosResponse<TLectura>)=> {\r\n      setEntidad(props.transformar(respuesta.data));\r\n    })\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n\r\n  async function editar(entidadEditar: TCreacion) {\r\n    try{\r\n      if(props.transformarFormData){\r\n        const formData = props.transformarFormData(entidadEditar);\r\n        await axios({\r\n            method: 'put',\r\n            url:`${props.url}/${id}`,\r\n            data: formData,\r\n            headers: {'Content-type':'multipart/form-data'}\r\n        });\r\n      } else {\r\n      await axios.put(`${props.url}/${id}`, entidadEditar)\r\n      }\r\n      history.push(props.urlIndice);\r\n    }\r\n    catch (error) {\r\n      setErrores(error.response.data)\r\n    }    \r\n  }\r\nreturn (\r\n    <>\r\n    <h3>Editar {props.nombreEntidad}</h3>\r\n    <MostrarErrores errores = {errores} />\r\n    {entidad ? props.children(entidad, editar): <Cargando />}\r\n</>\r\n)\r\n\r\n\r\n\r\n}\r\n\r\ninterface editarEntidadProps<TCreacion, TLectura> {\r\n    url: string;\r\n    urlIndice: string;\r\n    nombreEntidad:string;\r\n    children (entidad: TCreacion, editar: (entidad: TCreacion)=>void): ReactElement; \r\n    transformar(entidad: TLectura): TCreacion; \r\n    transformarFormData?(modelo: TCreacion):FormData\r\n}\r\n\r\nEditarEntidad.defaultProps = {\r\n    transformar: (entidad:any) => entidad\r\n}"]},"metadata":{},"sourceType":"module"}