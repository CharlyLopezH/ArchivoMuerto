{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\cines\\\\FormularioCines.tsx\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyFormGroupText from \"../utils/FormGroupText\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport MapaFormulario from \"../utils/MapaFormulario\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormularioCines(props) {\n  function transformarCoordenada() {\n    if (props.modelo.latitud && props.modelo.longitud) {\n      const respuesta = {\n        lat: props.modelo.latitud,\n        lng: props.modelo.longitud\n      };\n      return [respuesta];\n    }\n\n    return undefined;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.modelo,\n    onSubmit: props.onSubmit,\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"El nombre del cine es un campo requerido\").primeraLetraMayuscula()\n    }),\n    children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(MyFormGroupText, {\n        label: \"Nombre\",\n        campo: \"nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(MapaFormulario, {\n          campoLat: \"latitud\",\n          campoLng: \"longitud\",\n          coordenadas: transformarCoordenada()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formikProps.isSubmitting,\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary\",\n        to: \"/cines\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = FormularioCines;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioCines\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/cines/FormularioCines.tsx"],"names":["Form","Formik","Yup","MyFormGroupText","Button","Link","MapaFormulario","FormularioCines","props","transformarCoordenada","modelo","latitud","longitud","respuesta","lat","lng","undefined","onSubmit","object","nombre","string","required","primeraLetraMayuscula","formikProps","marginBottom","isSubmitting"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,QAA4C,QAA5C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;;AAGA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAuD;AAEpE,WAASC,qBAAT,GAA8D;AAC5D,QAAID,KAAK,CAACE,MAAN,CAAaC,OAAb,IAAwBH,KAAK,CAACE,MAAN,CAAaE,QAAzC,EAAmD;AAC/C,YAAMC,SAAwB,GAAE;AAACC,QAAAA,GAAG,EAAEN,KAAK,CAACE,MAAN,CAAaC,OAAnB;AAA4BI,QAAAA,GAAG,EAACP,KAAK,CAACE,MAAN,CAAaE;AAA7C,OAAhC;AACA,aAAO,CAACC,SAAD,CAAP;AACH;;AACD,WAAOG,SAAP;AACD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAER,KAAK,CAACE,MADvB;AAEE,IAAA,QAAQ,EAAEF,KAAK,CAACS,QAFlB;AAGE,IAAA,gBAAgB,EAAEf,GAAG,CAACgB,MAAJ,CAAW;AAC3BC,MAAAA,MAAM,EAAEjB,GAAG,CAACkB,MAAJ,GACLC,QADK,CACI,0CADJ,EAELC,qBAFK;AADmB,KAAX,CAHpB;AAAA,cASIC,WAAD,iBACC,QAAC,IAAD;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,QAAvB;AAAgC,QAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAGI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SAAZ;AAAA,+BACC,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,SAAzB;AAAmC,UAAA,QAAQ,EAAC,UAA5C;AACG,UAAA,WAAW,EAAEf,qBAAqB;AADrC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAHJ,eASE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEc,WAAW,CAACE,YAA9B;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAoC,QAAA,EAAE,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;KApCuBlB,e","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { cineCreacionDTO } from \"./cines.model\";\r\nimport * as Yup from \"yup\";\r\nimport MyFormGroupText from \"../utils/FormGroupText\";\r\nimport Button from \"../utils/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Mapa from \"../utils/Mapa\";\r\nimport MapaFormulario from \"../utils/MapaFormulario\";\r\nimport { coordenadaDTO } from \"../utils/coordenadas.model\";\r\n\r\nexport default function FormularioCines(props: iFormularioCinesProps) {\r\n\r\n  function transformarCoordenada(): coordenadaDTO[] | undefined {\r\n    if (props.modelo.latitud && props.modelo.longitud) {\r\n        const respuesta: coordenadaDTO ={lat: props.modelo.latitud, lng:props.modelo.longitud} \r\n        return [respuesta]; \r\n    }\r\n    return undefined;    \r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={props.modelo}\r\n      onSubmit={props.onSubmit}\r\n      validationSchema={Yup.object({\r\n        nombre: Yup.string()\r\n          .required(\"El nombre del cine es un campo requerido\")\r\n          .primeraLetraMayuscula(),\r\n      })}\r\n    >\r\n      {(formikProps) => (\r\n        <Form>\r\n          <MyFormGroupText label=\"Nombre\" campo=\"nombre\" />\r\n\r\n            <div style={{marginBottom: '1rem'}}> \r\n             <MapaFormulario campoLat=\"latitud\" campoLng=\"longitud\" \r\n                coordenadas={transformarCoordenada()} />\r\n\r\n            </div> \r\n\r\n          <Button disabled={formikProps.isSubmitting} type=\"submit\">Salvar</Button>\r\n          <Link className=\"btn btn-secondary\" to=\"/cines\">Cancelar</Link>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\ninterface iFormularioCinesProps {\r\n  modelo: cineCreacionDTO;\r\n  onSubmit(\r\n    valores: cineCreacionDTO,\r\n    acciones: FormikHelpers<cineCreacionDTO>\r\n  ): void;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}