{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\projects\\\\contra\\\\archivo\\\\react-archivo\\\\src\\\\cajas\\\\EditarCaja.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Cargando from \"../utils/Cargando\";\nimport { urlCajas } from \"../utils/endpoints\";\nimport { convertirCajaAFormData } from \"../utils/FormDataUtils\";\nimport MostrarErrores from \"../utils/MostrarErrores\";\nimport FormularioCajas from \"./FormularioCajas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditarCaja() {\n  _s();\n\n  const [caja, setCaja] = useState();\n  const [cajaPutGet, setCajaPutGet] = useState();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [errores, setErrores] = useState([]);\n  useEffect(() => {\n    axios.get(`${urlCajas}/PutGet/${id}`).then(respuesta => {\n      const modelo = {\n        titulo: respuesta.data.caja.titulo,\n        enCines: respuesta.data.caja.enCines,\n        trailer: respuesta.data.caja.trailer,\n        posterURL: respuesta.data.caja.poster,\n        resumen: respuesta.data.caja.resumen,\n        fechaLanzamiento: new Date(respuesta.data.caja.fechaLanzamiento)\n      };\n      setCaja(modelo);\n      setCajaPutGet(respuesta.data);\n    });\n  }, [id]);\n\n  async function editar(cajaEditar) {\n    try {\n      const formData = convertirCajaAFormData(cajaEditar);\n      await axios({\n        method: 'put',\n        url: `${urlCajas}/${id}`,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      history.push(`/caja/${id}`);\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Editar Pel\\xEDcula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), caja && cajaPutGet ? /*#__PURE__*/_jsxDEV(FormularioCajas, {\n      actoresSeleccionados: cajaPutGet.actores,\n      cinesSeleccionados: cajaPutGet.cinesSeleccionados,\n      cinesNoSeleccionados: cajaPutGet.cinesNoSeleccionados,\n      generosNoSeleccionados: cajaPutGet.generosNoSeleccionados,\n      generosSeleccionados: cajaPutGet.generosSeleccionados,\n      modelo: caja,\n      onSubmit: async valores => await editar(valores)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditarCaja, \"EMg3a5mowaj+tRBBGtDWLJ00g64=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditarCaja;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarCaja\");","map":{"version":3,"sources":["C:/reactjs/projects/contra/archivo/react-archivo/src/cajas/EditarCaja.tsx"],"names":["axios","useEffect","useState","useHistory","useParams","Cargando","urlCajas","convertirCajaAFormData","MostrarErrores","FormularioCajas","EditarCaja","caja","setCaja","cajaPutGet","setCajaPutGet","id","history","errores","setErrores","get","then","respuesta","modelo","titulo","data","enCines","trailer","posterURL","poster","resumen","fechaLanzamiento","Date","editar","cajaEditar","formData","method","url","headers","push","error","response","actores","cinesSeleccionados","cinesNoSeleccionados","generosNoSeleccionados","generosSeleccionados","valores"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Cargando from \"../utils/Cargando\";\r\nimport { urlCajas } from \"../utils/endpoints\";\r\nimport { convertirCajaAFormData } from \"../utils/FormDataUtils\";\r\nimport MostrarErrores from \"../utils/MostrarErrores\";\r\nimport FormularioCajas from \"./FormularioCajas\";\r\nimport { cajaCreacionDTO, cajasPutGetDTO } from \"./cajas.model\";\r\n\r\nexport default function EditarCaja() {\r\n\r\n    const [caja, setCaja] = useState<cajaCreacionDTO>();\r\n    const [cajaPutGet, setCajaPutGet] = useState<cajasPutGetDTO>();\r\n    const { id }: any = useParams();\r\n    const history = useHistory();\r\n    const [errores, setErrores] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${urlCajas}/PutGet/${id}`)\r\n            .then((respuesta: AxiosResponse<cajasPutGetDTO>) => {\r\n                const modelo: cajaCreacionDTO = {\r\n                    titulo: respuesta.data.caja.titulo,\r\n                    enCines: respuesta.data.caja.enCines,\r\n                    trailer: respuesta.data.caja.trailer,\r\n                    posterURL: respuesta.data.caja.poster,\r\n                    resumen: respuesta.data.caja.resumen,\r\n                    fechaLanzamiento: new Date(respuesta.data.caja.fechaLanzamiento)\r\n                };\r\n                setCaja(modelo);\r\n                setCajaPutGet(respuesta.data);\r\n            })\r\n    }, [id])\r\n\r\n    async function editar(cajaEditar: cajaCreacionDTO) {\r\n        try{\r\n            const formData = convertirCajaAFormData(cajaEditar);\r\n            await axios({\r\n                method: 'put',\r\n                url: `${urlCajas}/${id}`,\r\n                data: formData,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            });\r\n            history.push(`/caja/${id}`);\r\n        }\r\n        catch(error){\r\n            setErrores(error.response.data);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h3>Editar Pel√≠cula</h3>\r\n            <MostrarErrores errores={errores} />\r\n            {caja && cajaPutGet ? <FormularioCajas\r\n                actoresSeleccionados={cajaPutGet.actores}\r\n                cinesSeleccionados={cajaPutGet.cinesSeleccionados}\r\n                cinesNoSeleccionados={cajaPutGet.cinesNoSeleccionados}\r\n                generosNoSeleccionados={cajaPutGet.generosNoSeleccionados}\r\n                generosSeleccionados={cajaPutGet.generosSeleccionados}\r\n                modelo={caja}\r\n                onSubmit={async valores => await editar(valores)}\r\n            /> : <Cargando />}\r\n\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}