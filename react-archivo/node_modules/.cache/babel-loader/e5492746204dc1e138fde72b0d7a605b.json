{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\utils\\\\FormGroupFecha.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormikContext } from \"formik\";\nimport MostrarErrorCampo from \"./MostrarErrorCampo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormGroupFecha(props) {\n  _s();\n\n  var _values$props$campo, _errors$props$campo;\n\n  const {\n    values,\n    validateForm,\n    touched,\n    errors\n  } = useFormikContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.campo,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: props.campo,\n      name: props.campo,\n      defaultValue: (_values$props$campo = values[props.campo]) === null || _values$props$campo === void 0 ? void 0 : _values$props$campo.toLocaleDateString(\"en-CA\"),\n      onChange: e => {\n        const fecha = new Date(e.currentTarget.value + 'T00:00:00');\n        values[props.campo] = fecha;\n        validateForm();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), touched[props.campo] && errors[props.campo] ? /*#__PURE__*/_jsxDEV(MostrarErrorCampo, {\n      mensaje: (_errors$props$campo = errors[props.campo]) === null || _errors$props$campo === void 0 ? void 0 : _errors$props$campo.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormGroupFecha, \"qY0THuA31tj6kZcHzz6bWpBYuJI=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = FormGroupFecha;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormGroupFecha\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/FormGroupFecha.tsx"],"names":["useFormikContext","MostrarErrorCampo","FormGroupFecha","props","values","validateForm","touched","errors","campo","label","toLocaleDateString","e","fecha","Date","currentTarget","value","toString"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,QAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAqD;AAAA;;AAAA;;AAClE,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAA4CP,gBAAgB,EAAlE;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEG,KAAK,CAACK,KAAtB;AAAA,gBAA8BL,KAAK,CAACM;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AACE,MAAA,EAAE,EAAEN,KAAK,CAACK,KADZ;AAEE,MAAA,IAAI,EAAEL,KAAK,CAACK,KAFd;AAGE,MAAA,YAAY,yBAAEJ,MAAM,CAACD,KAAK,CAACK,KAAP,CAAR,wDAAE,oBAAqBE,kBAArB,CAAwC,OAAxC,CAHhB;AAIE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACf,cAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASF,CAAC,CAACG,aAAF,CAAgBC,KAAhB,GAAwB,WAAjC,CAAd;AACAX,QAAAA,MAAM,CAACD,KAAK,CAACK,KAAP,CAAN,GAAsBI,KAAtB;AACAP,QAAAA,YAAY;AACb;AARH;AAAA;AAAA;AAAA;AAAA,YAHF,EAaGC,OAAO,CAACH,KAAK,CAACK,KAAP,CAAP,IAAwBD,MAAM,CAACJ,KAAK,CAACK,KAAP,CAA9B,gBACD,QAAC,iBAAD;AAAmB,MAAA,OAAO,yBAAED,MAAM,CAACJ,KAAK,CAACK,KAAP,CAAR,wDAAE,oBAAqBQ,QAArB;AAA5B;AAAA;AAAA;AAAA;AAAA,YADC,GACkE,IAdrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApBuBd,c;UAC4BF,gB;;;KAD5BE,c","sourcesContent":["import { useFormikContext } from \"formik\";\r\nimport MostrarErrorCampo from \"./MostrarErrorCampo\";\r\n\r\n\r\nexport default function FormGroupFecha(props: iFormGroupFechaProps) {\r\n  const { values, validateForm, touched, errors } = useFormikContext<any>();\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={props.campo}>{props.label}</label>\r\n\r\n      <input type=\"date\" className=\"form-control\"\r\n        id={props.campo}\r\n        name={props.campo}\r\n        defaultValue={values[props.campo]?.toLocaleDateString(\"en-CA\")}\r\n        onChange={(e) => {\r\n          const fecha = new Date(e.currentTarget.value + 'T00:00:00');\r\n          values[props.campo] = fecha;\r\n          validateForm();\r\n        }}        \r\n      />\r\n      {touched[props.campo] && errors[props.campo] ?\r\n      <MostrarErrorCampo mensaje={errors[props.campo]?.toString()!} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface iFormGroupFechaProps {\r\n  campo: string;\r\n  label: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}