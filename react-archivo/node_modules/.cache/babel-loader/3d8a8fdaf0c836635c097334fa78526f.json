{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\Udemy\\\\NetCore\\\\react-peliculas\\\\src\\\\utils\\\\SelectorMultiple.tsx\";\nimport './SelectorMultiple.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectorMultiple(props) {\n  function seleccionar(item) {\n    const seleccionados = [...props.seleccionados, item];\n    const noSeleccionados = props.noSeleccionados.filter(valor => valor !== item);\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  function deseleccionar(item) {\n    const seleccionados = props.seleccionados.filter(valor => valor !== item);\n    const noSeleccionados = [...props.noSeleccionados, item];\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  function seleccionarTodo() {\n    const seleccionados = [...props.seleccionados, ...props.noSeleccionados];\n    const noSeleccionados = [];\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  function deseleccionarTodo() {\n    const noSeleccionados = [...props.noSeleccionados, ...props.seleccionados];\n    const seleccionados = [];\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selector-multiple\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.noSeleccionados.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => seleccionar(item),\n        children: item.valor\n      }, item.llave, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector-multiple-botones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: seleccionarTodo,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: deseleccionarTodo,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.seleccionados.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => deseleccionar(item),\n        children: item.valor\n      }, item.llave, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = SelectorMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectorMultiple\");","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/SelectorMultiple.tsx"],"names":["SelectorMultiple","props","seleccionar","item","seleccionados","noSeleccionados","filter","valor","onChange","deseleccionar","seleccionarTodo","deseleccionarTodo","map","llave"],"mappings":";AAAA,OAAO,wBAAP;;AACA,eAAe,SAASA,gBAAT,CAA0BC,KAA1B,EAAwD;AACnE,WAASC,WAAT,CAAqBC,IAArB,EAAiD;AAC7C,UAAMC,aAAa,GAAG,CAAC,GAAGH,KAAK,CAACG,aAAV,EAAwBD,IAAxB,CAAtB;AACA,UAAME,eAAe,GAAGJ,KAAK,CAACI,eAAN,CAAsBC,MAAtB,CAA6BC,KAAK,IAAIA,KAAK,KAAIJ,IAA/C,CAAxB;AACAF,IAAAA,KAAK,CAACO,QAAN,CAAeJ,aAAf,EAA6BC,eAA7B;AACH;;AACD,WAASI,aAAT,CAAuBN,IAAvB,EAAmD;AAC/C,UAAMC,aAAa,GAAGH,KAAK,CAACG,aAAN,CAAoBE,MAApB,CAA2BC,KAAK,IAAEA,KAAK,KAAGJ,IAA1C,CAAtB;AACA,UAAME,eAAe,GAAG,CAAC,GAAGJ,KAAK,CAACI,eAAV,EAA0BF,IAA1B,CAAxB;AACAF,IAAAA,KAAK,CAACO,QAAN,CAAeJ,aAAf,EAA6BC,eAA7B;AACH;;AAED,WAASK,eAAT,GAA2B;AACvB,UAAMN,aAAa,GAAG,CAAC,GAAGH,KAAK,CAACG,aAAV,EAAyB,GAAGH,KAAK,CAACI,eAAlC,CAAtB;AACA,UAAMA,eAAyC,GAAG,EAAlD;AACAJ,IAAAA,KAAK,CAACO,QAAN,CAAeJ,aAAf,EAA8BC,eAA9B;AACH;;AAED,WAASM,iBAAT,GAA4B;AACxB,UAAMN,eAAe,GAAG,CAAC,GAAGJ,KAAK,CAACI,eAAV,EAA2B,GAAGJ,KAAK,CAACG,aAApC,CAAxB;AACA,UAAMA,aAAsC,GAAC,EAA7C;AACAH,IAAAA,KAAK,CAACO,QAAN,CAAeJ,aAAf,EAA6BC,eAA7B;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAA,gBACKJ,KAAK,CAACI,eAAN,CAAsBO,GAAtB,CAA0BT,IAAI,iBAC3B;AAAqB,QAAA,OAAO,EAAE,MAAID,WAAW,CAACC,IAAD,CAA7C;AAAA,kBAAsDA,IAAI,CAACI;AAA3D,SAASJ,IAAI,CAACU,KAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACQ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEH,eAA/B;AAAA,kBAAiD;AAAjD;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,iBAA/B;AAAA,kBAAmD;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,gBACKV,KAAK,CAACG,aAAN,CAAoBQ,GAApB,CAAwBT,IAAI,iBACzB;AAAqB,QAAA,OAAO,EAAE,MAAIM,aAAa,CAACN,IAAD,CAA/C;AAAA,kBAAwDA,IAAI,CAACI;AAA7D,SAASJ,IAAI,CAACU,KAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KAzCuBb,gB","sourcesContent":["import './SelectorMultiple.css'\r\nexport default function SelectorMultiple(props: iSelectorMultipleProps){\r\n    function seleccionar(item:selectorMultipleModel) {\r\n        const seleccionados = [...props.seleccionados,item];\r\n        const noSeleccionados = props.noSeleccionados.filter(valor => valor !==item);\r\n        props.onChange(seleccionados,noSeleccionados);    \r\n    }\r\n    function deseleccionar(item:selectorMultipleModel) {\r\n        const seleccionados = props.seleccionados.filter(valor=>valor!==item);\r\n        const noSeleccionados = [...props.noSeleccionados,item];\r\n        props.onChange(seleccionados,noSeleccionados);\r\n    }\r\n\r\n    function seleccionarTodo() {\r\n        const seleccionados = [...props.seleccionados, ...props.noSeleccionados];\r\n        const noSeleccionados: selectorMultipleModel [] = [];\r\n        props.onChange(seleccionados, noSeleccionados);\r\n    }\r\n\r\n    function deseleccionarTodo(){\r\n        const noSeleccionados = [...props.noSeleccionados, ...props.seleccionados];\r\n        const seleccionados: selectorMultipleModel[]=[];\r\n        props.onChange(seleccionados,noSeleccionados);\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"selector-multiple\">\r\n            <ul>\r\n                {props.noSeleccionados.map(item=>\r\n                    <li key={item.llave} onClick={()=>seleccionar(item)}>{item.valor}</li>)}\r\n            </ul>\r\n            <div className=\"selector-multiple-botones\">\r\n                    <button type=\"button\" onClick={seleccionarTodo}>{'>>'}</button>\r\n                    <button type=\"button\" onClick={deseleccionarTodo}>{'<<'}</button>\r\n            </div>\r\n            <ul>\r\n                {props.seleccionados.map(item=>\r\n                    <li key={item.llave} onClick={()=>deseleccionar(item)}>{item.valor}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface iSelectorMultipleProps {\r\n    seleccionados: selectorMultipleModel[];\r\n    noSeleccionados: selectorMultipleModel[];\r\n    onChange(seleccionados: selectorMultipleModel[], noSeleccionados:selectorMultipleModel[]):void\r\n}\r\n\r\nexport interface selectorMultipleModel{\r\n    llave:number;\r\n    valor:string;\r\n}"]},"metadata":{},"sourceType":"module"}