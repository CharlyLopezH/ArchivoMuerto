{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\projects\\\\contra\\\\archivo\\\\react-archivo\\\\src\\\\cajas\\\\CrearCaja.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cargando from \"../utils/Cargando\";\nimport { urlCajas } from \"../utils/endpoints\";\nimport { convertirCajaAFormData } from \"../utils/FormDataUtils\";\nimport MostrarErrores from \"../utils/MostrarErrores\";\nimport FormularioCajas from \"./FormularioCajas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CrearCajas() {\n  _s();\n\n  const [generosNoSeleccionados, setGenerosNoSeleccionados] = useState([]);\n  const [cinesNoSeleccionados, setCinesNoSeleccionados] = useState([]);\n  const [cargado, setCargado] = useState(false);\n  const history = useHistory();\n  const [errores, setErrores] = useState([]);\n  useEffect(() => {\n    axios.get(`${urlCajas}/postget`).then(respuesta => {\n      setGenerosNoSeleccionados(respuesta.data.generos);\n      setCinesNoSeleccionados(respuesta.data.cines);\n      setCargado(true);\n    });\n  }, []);\n\n  async function crear(caja) {\n    try {\n      const formData = convertirCajaAFormData(caja);\n      await axios({\n        method: 'post',\n        url: urlCajas,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(respuesta => {\n        history.push(`/caja/${respuesta.data}`);\n      });\n    } catch (error) {\n      setErrores(error.response.data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Crear Pel\\xEDcula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MostrarErrores, {\n      errores: errores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), cargado ? /*#__PURE__*/_jsxDEV(FormularioCajas, {\n      actoresSeleccionados: [],\n      cinesNoSeleccionados: cinesNoSeleccionados,\n      cinesSeleccionados: [],\n      generosNoSeleccionados: generosNoSeleccionados,\n      generosSeleccionados: [],\n      modelo: {\n        titulo: '',\n        enCines: false,\n        trailer: ''\n      },\n      onSubmit: valores => crear(valores)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CrearCajas, \"39GTExB5kLQ6SfUllecK/q9MuuQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = CrearCajas;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrearCajas\");","map":{"version":3,"sources":["C:/reactjs/projects/contra/archivo/react-archivo/src/cajas/CrearCaja.tsx"],"names":["axios","useEffect","useState","useHistory","Cargando","urlCajas","convertirCajaAFormData","MostrarErrores","FormularioCajas","CrearCajas","generosNoSeleccionados","setGenerosNoSeleccionados","cinesNoSeleccionados","setCinesNoSeleccionados","cargado","setCargado","history","errores","setErrores","get","then","respuesta","data","generos","cines","crear","caja","formData","method","url","headers","push","error","response","titulo","enCines","trailer","valores"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAGA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,sBAAT,QAAuC,wBAAvC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDT,QAAQ,CAAc,EAAd,CAApE;AACA,QAAM,CAACU,oBAAD,EAAuBC,uBAAvB,IAAkDX,QAAQ,CAAc,EAAd,CAAhE;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,KAAD,CAArC;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAW,EAAX,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVD,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAEd,QAAS,UAAtB,EACCe,IADD,CACOC,SAAD,IAA4C;AAC9CV,MAAAA,yBAAyB,CAACU,SAAS,CAACC,IAAV,CAAeC,OAAhB,CAAzB;AACAV,MAAAA,uBAAuB,CAACQ,SAAS,CAACC,IAAV,CAAeE,KAAhB,CAAvB;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KALD;AAMH,GAPQ,EAOP,EAPO,CAAT;;AASA,iBAAeU,KAAf,CAAqBC,IAArB,EAA2C;AACvC,QAAI;AACA,YAAMC,QAAQ,GAAGrB,sBAAsB,CAACoB,IAAD,CAAvC;AACA,YAAM1B,KAAK,CAAC;AACR4B,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,GAAG,EAAExB,QAFG;AAGRiB,QAAAA,IAAI,EAAEK,QAHE;AAIRG,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAJD,OAAD,CAAL,CAKHV,IALG,CAKGC,SAAD,IAAsC;AAC1CL,QAAAA,OAAO,CAACe,IAAR,CAAc,SAAQV,SAAS,CAACC,IAAK,EAArC;AACH,OAPK,CAAN;AAQH,KAVD,CAWA,OAAMU,KAAN,EAAa;AACTd,MAAAA,UAAU,CAACc,KAAK,CAACC,QAAN,CAAeX,IAAhB,CAAV;AACH;AACJ;;AAED,sBACA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEL;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFA,EAGCH,OAAO,gBACR,QAAC,eAAD;AACA,MAAA,oBAAoB,EAAE,EADtB;AAEA,MAAA,oBAAoB,EAAEF,oBAFtB;AAGA,MAAA,kBAAkB,EAAE,EAHpB;AAIA,MAAA,sBAAsB,EAAEF,sBAJxB;AAKA,MAAA,oBAAoB,EAAI,EALxB;AAMA,MAAA,MAAM,EAAE;AAACwB,QAAAA,MAAM,EAAC,EAAR;AAAWC,QAAAA,OAAO,EAAE,KAApB;AAA0BC,QAAAA,OAAO,EAAC;AAAlC,OANR;AAOA,MAAA,QAAQ,EAAEC,OAAO,IAAEZ,KAAK,CAACY,OAAD;AAPxB;AAAA;AAAA;AAAA;AAAA,YADQ,gBASH,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAZL;AAAA,kBADA;AAgBH;;GAlDuB5B,U;UAKJN,U;;;KALIM,U","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { cineDTO } from \"../cines/cines.model\";\r\nimport { generoDTO } from \"../generos/generos.model\";\r\nimport Cargando from \"../utils/Cargando\";\r\n\r\nimport { urlCajas } from \"../utils/endpoints\";\r\nimport { convertirCajaAFormData } from \"../utils/FormDataUtils\";\r\nimport MostrarErrores from \"../utils/MostrarErrores\";\r\nimport FormularioCajas from \"./FormularioCajas\";\r\nimport { cajaCreacionDTO, cajasPostGetDTO } from \"./cajas.model\";\r\n\r\nexport default function CrearCajas() {\r\n\r\n    const [generosNoSeleccionados, setGenerosNoSeleccionados] = useState<generoDTO[]>([]);\r\n    const [cinesNoSeleccionados, setCinesNoSeleccionados] = useState<generoDTO[]>([]);\r\n    const [cargado,setCargado] = useState(false);\r\n    const history = useHistory();\r\n    const [errores, setErrores] = useState<string[]>([]);\r\n\r\n    useEffect(()=>{\r\n        axios.get(`${urlCajas}/postget`)\r\n        .then((respuesta:AxiosResponse<cajasPostGetDTO>)=>{\r\n            setGenerosNoSeleccionados(respuesta.data.generos);\r\n            setCinesNoSeleccionados(respuesta.data.cines);\r\n            setCargado(true);\r\n        }) \r\n    },[])\r\n\r\n    async function crear(caja: cajaCreacionDTO){\r\n        try {\r\n            const formData = convertirCajaAFormData(caja);\r\n            await axios({\r\n                method: 'post',\r\n                url: urlCajas,\r\n                data: formData,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }).then((respuesta: AxiosResponse<number>) => {\r\n                history.push(`/caja/${respuesta.data}`);\r\n            })\r\n        }\r\n        catch(error) {\r\n            setErrores(error.response.data);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <>\r\n    <h3>Crear Pel√≠cula</h3> \r\n    <MostrarErrores errores={errores} />\r\n    {cargado ?\r\n    <FormularioCajas \r\n    actoresSeleccionados={[]}\r\n    cinesNoSeleccionados={cinesNoSeleccionados}\r\n    cinesSeleccionados={[]}\r\n    generosNoSeleccionados={generosNoSeleccionados}\r\n    generosSeleccionados = {[]}\r\n    modelo={{titulo:'',enCines: false,trailer:'' }}\r\n    onSubmit={valores=>crear(valores)}\r\n    /> : <Cargando /> }\r\n    </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}