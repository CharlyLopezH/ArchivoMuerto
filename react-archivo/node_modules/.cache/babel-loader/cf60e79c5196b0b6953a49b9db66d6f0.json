{"ast":null,"code":"export function convertirActorAFormData(actor) {\n  const formData = new FormData();\n  formData.append('nombre', actor.nombre);\n\n  if (actor.biografia) {\n    formData.append('biografia', actor.biografia);\n  }\n\n  if (actor.fechaNacimiento) {\n    formData.append('fechaNacimiento', formatearFecha(actor.fechaNacimiento));\n  }\n\n  if (actor.foto) {\n    formData.append(\"foto\", actor.foto);\n  }\n\n  return formData;\n}\n\nfunction formatearFecha(date) {\n  date = new Date(date);\n  const formato = new Intl.DateTimeFormat(\"en\", {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  });\n  const [{\n    value: month\n  },, {\n    value: day\n  },, {\n    value: year\n  }] = formato.formatToParts(date);\n  return `${year}-${month}-${day}`;\n}\n\nexport function convertirPeliculaAFormData(pelicula) {\n  const formData = new FormData();\n  formData.append('titulo', pelicula.titulo);\n\n  if (pelicula.resumen) {\n    formData.append('resumen', pelicula.resumen);\n  }\n\n  formData.append('trailer', pelicula.trailer);\n  formData.append('enCines', String(pelicula.enCines));\n\n  if (pelicula.fechaLanzamiento) {\n    formData.append(\"fechaLanzamiento\", formatearFecha(pelicula.fechaLanzamiento));\n  }\n\n  if (pelicula.poster) {\n    formData.append('poster', pelicula.poster);\n  }\n\n  formData.append(\"generosIds\", JSON.stringify(pelicula.generosIds));\n  formData.append(\"cinesIds\", JSON.stringify(pelicula.cinesIds));\n  formData.append(\"actores\", JSON.stringify(pelicula.actores));\n  return formData;\n}","map":{"version":3,"sources":["C:/reactjs/Udemy/NetCore/react-peliculas/src/utils/FormDataUtils.ts"],"names":["convertirActorAFormData","actor","formData","FormData","append","nombre","biografia","fechaNacimiento","formatearFecha","foto","date","Date","formato","Intl","DateTimeFormat","year","month","day","value","formatToParts","convertirPeliculaAFormData","pelicula","titulo","resumen","trailer","String","enCines","fechaLanzamiento","poster","JSON","stringify","generosIds","cinesIds","actores"],"mappings":"AAGA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAoE;AACvE,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,KAAK,CAACI,MAAhC;;AACA,MAAIJ,KAAK,CAACK,SAAV,EAAqB;AACjBJ,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BH,KAAK,CAACK,SAAnC;AACH;;AACD,MAAIL,KAAK,CAACM,eAAV,EAA2B;AACvBL,IAAAA,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAmCI,cAAc,CAACP,KAAK,CAACM,eAAP,CAAjD;AACH;;AAED,MAAIN,KAAK,CAACQ,IAAV,EAAgB;AACZP,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,KAAK,CAACQ,IAA9B;AACH;;AAID,SAAOP,QAAP;AACH;;AAED,SAASM,cAAT,CAAwBE,IAAxB,EAAoC;AAChCA,EAAAA,IAAI,GAAC,IAAIC,IAAJ,CAASD,IAAT,CAAL;AACA,QAAME,OAAO,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,IAAxB,EAA8B;AAC1CC,IAAAA,IAAI,EAAE,SADoC;AAE1CC,IAAAA,KAAK,EAAE,SAFmC;AAG1CC,IAAAA,GAAG,EAAE;AAHqC,GAA9B,CAAhB;AAKA,QAAM,CACF;AAACC,IAAAA,KAAK,EAAEF;AAAR,GADE,GAEF;AAACE,IAAAA,KAAK,EAAED;AAAR,GAFE,GAGF;AAACC,IAAAA,KAAK,EAAEH;AAAR,GAHE,IAIFH,OAAO,CAACO,aAAR,CAAsBT,IAAtB,CAJJ;AAKA,SAAQ,GAAEK,IAAK,IAAGC,KAAM,IAAGC,GAAI,EAA/B;AACH;;AAED,OAAO,SAASG,0BAAT,CAAoCC,QAApC,EAA8E;AACrF,QAAMnB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAAyBiB,QAAQ,CAACC,MAAlC;;AACA,MAAID,QAAQ,CAACE,OAAb,EAAsB;AAClBrB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BiB,QAAQ,CAACE,OAApC;AACH;;AACDrB,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BiB,QAAQ,CAACG,OAApC;AACAtB,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BqB,MAAM,CAACJ,QAAQ,CAACK,OAAV,CAAjC;;AAEA,MAAIL,QAAQ,CAACM,gBAAb,EAA8B;AAC1BzB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,kBAAhB,EAAoCI,cAAc,CAACa,QAAQ,CAACM,gBAAV,CAAlD;AACH;;AAED,MAAIN,QAAQ,CAACO,MAAb,EAAoB;AAChB1B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BiB,QAAQ,CAACO,MAAnC;AACH;;AAED1B,EAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8ByB,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACU,UAAxB,CAA9B;AACA7B,EAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4ByB,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACW,QAAxB,CAA5B;AACA9B,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2ByB,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACY,OAAxB,CAA3B;AAGA,SAAO/B,QAAP;AACC","sourcesContent":["import { actorCreacionDTO } from \"../actores/actores.model\";\r\nimport { peliculaCreacionDTO } from \"../peliculas/peliculas.model\";\r\n\r\nexport function convertirActorAFormData(actor: actorCreacionDTO): FormData {\r\n    const formData = new FormData();\r\n    formData.append('nombre', actor.nombre);\r\n    if (actor.biografia) {\r\n        formData.append('biografia', actor.biografia);        \r\n    }\r\n    if (actor.fechaNacimiento) {\r\n        formData.append('fechaNacimiento', formatearFecha(actor.fechaNacimiento) )\r\n    }\r\n\r\n    if (actor.foto) {\r\n        formData.append(\"foto\", actor.foto) \r\n    }\r\n\r\n\r\n\r\n    return formData; \r\n}\r\n\r\nfunction formatearFecha(date: Date) {\r\n    date=new Date(date);\r\n    const formato = new Intl.DateTimeFormat(\"en\", {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit'\r\n    });\r\n    const [\r\n        {value: month},,\r\n        {value: day},,\r\n        {value: year}\r\n    ] = formato.formatToParts(date);\r\n    return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport function convertirPeliculaAFormData(pelicula: peliculaCreacionDTO): FormData  {\r\nconst formData = new FormData();\r\nformData.append('titulo',pelicula.titulo);\r\nif (pelicula.resumen) {\r\n    formData.append('resumen', pelicula.resumen);\r\n}\r\nformData.append('trailer', pelicula.trailer);\r\nformData.append('enCines', String(pelicula.enCines));\r\n\r\nif (pelicula.fechaLanzamiento){\r\n    formData.append(\"fechaLanzamiento\", formatearFecha(pelicula.fechaLanzamiento));\r\n}\r\n\r\nif (pelicula.poster){\r\n    formData.append('poster', pelicula.poster);\r\n}\r\n\r\nformData.append(\"generosIds\", JSON.stringify(pelicula.generosIds));\r\nformData.append(\"cinesIds\", JSON.stringify(pelicula.cinesIds));\r\nformData.append(\"actores\", JSON.stringify(pelicula.actores));\r\n\r\n\r\nreturn formData;\r\n}"]},"metadata":{},"sourceType":"module"}